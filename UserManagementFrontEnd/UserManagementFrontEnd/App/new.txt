/// <reference path="C:\Users\raeli1\Desktop\UserManegmentTemplate\UserManagementFrontEnd\UserManagementFrontEnd\Script/angular.js" />
/// <reference path="C:\Users\raeli1\Desktop\UserManegmentTemplate\UserManagementFrontEnd\UserManagementFrontEnd\Script/jquery-3.1.1.js" />


app.controller('departmentCtrl', function ($scope, $location, getAllDepBasedOrgId, getAllDepBasedOrgIdDepId, addDep, editeDep, editeDepParent, editeAuthToDep, deleteDep) {
    //public int Id { get; set; }
    //public string Name { get; set; }
    //public int AdminId { get; set; }
    //public int OrgId { get; set; }
    //public int parentId { get; set; }
    //public List<string> AuthType { get; set; }
   //check ?!
    $scope.editee = function (dep) { editeDep.put(dep).then(function (deps) { }, function (response) { return response }) }
    $scope.editeeParent = function (dep) { editeDepParent.put(dep).then(function (deps) { }, function (response) { return response }) }
    $scope.add = function (dep) { addDep.post(dep).then(function (deps) { }, function (response) { return response }) }
    $scope.delete = function (dep) { deleteDep.put(dep).then(function (deps) { }, function (response) { return response }) }
    $scope.getAllDepBasedOrgId = function (orgId) { getAllDepBasedOrgId.get(orgId).then(function (users) { }, function (response) { return response }) }
    $scope.getAllDepBasedOrgIdDepId = function (orgId, depId) { getAllDepBasedOrgIdDepId.get(orgId, depId).then(function (users) { }, function (response) { return response }) }
   
    $scope.obj = [{ Id: 1, ch: [2, 3, 4], parentId: 0 },
        { Id: 2, ch: [13, 14], parentId: 1 },
        { Id: 3, ch: [40], parentId: 1 },
        { Id: 4, ch: [16, 15], parentId: 1 },
        { Id: 13, ch: [130], parentId: 2 },
        { Id: 14, ch: [140], parentId: 2 },
        { Id: 40, ch: [], parentId: 3 },
        { Id: 15, ch: [], parentId: 4 },
        { Id: 16, ch: [], parentId: 4 },
        { Id: 130, ch: [], parentId: 13 },
        { Id: 140, ch: [222], parentId: 14 },
        { Id: 111, ch: [666, 333, 444], parentId: 0 },
        { Id: 222, ch: [], parentId: 140 }];
    $scope.dep = [{Id: 0, Name:'', AdminId:0, OrgId:0, parentId:0, AuthType:[]}];
});

app.directive('tree', function ($timeout) {

    return {

        scope: { obj: '=',parentId:'=' },
        templateUrl: 'App/views/department/tree.html',

        link: function (s, el, attr) {
            var m;

            s.snd = function (m) { };

            //gather tree elements
            $.each(s.obj, function (index, value) {
                var m = $('ul[data-Id=0]').clone();
                m.attr('data-Id', value.Id);
              m.attr('data-p', value.parentId);
                m.children('li').attr('data-Id', value.Id);
                m.children('li').children('span[data-Id]').attr('data-Id', value.Id);
                m.children('li').children('span[show]').html(value.Id);

                //m.children('li').append(value.Id);


                $('#cont').append(m);

            });
            //show pop massege
            //$('#cont >ul >li ').on('click', 'span', function (e) {
            //create tree
            $('#cont >ul').each(function (i, v) {
                $(this).appendTo($('li[data-Id=' + $(this).attr('data-p') + ']'));
            });


            //    $('#myModal').modal('show')

            //    return false;
            //});
            //show hIde tree

           
            
            $(document).ready(function () {
             var Ids = [];
             
                $timeout(function () {
                    $('span[show]').click(function () {


                        if ($(this).parent('li').children('ul').css('display') !== "none" && $(this).parent('li').children('ul').length > 0) {
                            $(this).removeClass('glyphicon glyphicon-minus');
                            $(this).addClass('glyphicon glyphicon-plus');
                            $(this).parent('li').children('ul').css('display', 'none');

                        } else {
                            $(this).parent('li').children('ul').css('display', 'block');
                            $(this).removeClass('glyphicon glyphicon-plus');
                            $(this).addClass('glyphicon glyphicon-minus');

                        }


                        return false;
                    });
                }, 1000);
                $timeout(function () {
                    
                    $('span[parent]').click(function () {
                      s.parents = s.obj;
                       
                        var Ids = [];
                        var c = 0;
                        var vb;
                        $('#sec').html($(this).parent('li').parent('ul').clone());

                        $(document).ready(function () {
                            $timeout(function () {
                                Ids = [];
                                $('#sec li').each(function () {
                                  //console.log($(this).attr('data-Id') + 'vv');
                                  Ids.push($(this).attr('data-Id'))
                                });
                                fillParent(Ids);
                            }, 10);
                        });
                    })
                }, 30);


                function fillParent(a) {
                    for (var i = 0; i < s.obj.length; i++) {
                        for (let ii = 0; ii < a.length; ii++) {
                            //console.log(a[ii] + 'aaa');
                           
                            if (s.obj[i].Id == a[ii]) {
                               console.log(s.obj[i].Id + 'ppp');
                                s.parents.splice(i, 1);
                            }
                        }
                    }
                    $.each(s.parents, function (i,v) {console.log(v.Id+'ssss') })
                }
            });
            
            









        }
    }
});